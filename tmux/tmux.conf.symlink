# use C-a, since it's on the home row and easier to hit than C-b
set-option -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix
set -g base-index 1

# vi is good
set -g mode-keys vi

set-option -g default-terminal screen-256color

bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history

bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout

# use vim-like keys for splits and windows
bind-key v split-window -h
bind-key s split-window -v
bind-key S split-window -v

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key h if-shell "$is_vim" "send-keys C-a h"  "select-pane -L"
bind-key j if-shell "$is_vim" "send-keys C-a j"  "select-pane -D"
bind-key k if-shell "$is_vim" "send-keys C-a k"  "select-pane -U"
bind-key l if-shell "$is_vim" "send-keys C-a l"  "select-pane -R"
bind-key C-o rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

bind-key a last-pane
bind-key q display-panes
bind-key c new-window
bind-key t next-window
bind-key T previous-window

bind-key [ copy-mode
bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -Tcopy-mode-vi Enter
bind-key -Tcopy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Status Bar
set -g status-justify centre
set-option -g status-interval 1
set-option -g status-left ''
set-option -g status-right ''

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# Disable waiting for excape characters
set -s escape-time 0

# Set scroll buffer size
set-option -g history-limit 100000

# Enable mouse support
set -g mouse on

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'erikw/tmux-dark-notify'

# Switch theme based on system dark mode
set -g @dark-notify-theme-path-light '$HOME/.dotfiles/tmux/tmux-colors-light.conf'
set -g @dark-notify-theme-path-dark '$HOME/.dotfiles/tmux/tmux-colors-dark.conf'

# Install TMUX Plugin Manager if not already installed
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Install TPM plugins
run '~/.tmux/plugins/tpm/bin/install_plugins'

# Initialize TMUX plugin manager (keep this line at the bottom of tmux.conf)
run-shell '~/.tmux/plugins/tpm/tpm'

# To cover some corner cases e.g. if you use the plugin tmux-reset or another TPM plugin sets the theme itself
if-shell "test -e ~/.local/state/tmux/tmux-dark-notify-theme.conf" \
     "source-file ~/.local/state/tmux/tmux-dark-notify-theme.conf"
